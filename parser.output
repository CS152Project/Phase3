Terminals unused in grammar

   EQUAL
   END
   ADD
   SUB
   MUlT
   UMINUS


State 0 conflicts: 1 shift/reduce, 1 reduce/reduce
State 3 conflicts: 1 shift/reduce, 1 reduce/reduce
State 4 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | functions program

    3 functions: %empty
    4          | function functions

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    6 declarations: %empty
    7             | declaration SEMICOLON declarations
    8             | error SEMICOLON declarations
    9             | declaration error declarations
   10             | declaration SEMICOLON error

   11 declaration: ident COLON INTEGER
   12            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | error COLON INTEGER
   15            | ident error INTEGER
   16            | ident COLON error

   17 ident: IDENT
   18      | IDENT COMMA ident

   19 statements: statement SEMICOLON
   20           | statement SEMICOLON statements
   21           | statement SEMICOLON error
   22           | error SEMICOLON statements
   23           | statement error statements

   24 statement: var ASSIGN expressions
   25          | IF bool_expression THEN statements ENDIF
   26          | IF bool_expression THEN statements ELSE statements ENDIF
   27          | WHILE bool_expression BEGINLOOP statements ENDLOOP
   28          | DO BEGINLOOP statements ENDLOOP WHILE bool_expression
   29          | FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   30          | READ vars
   31          | READ error
   32          | WRITE vars
   33          | WRITE error
   34          | CONTINUE
   35          | RETURN expressions

   36 bool_expression: relation_and_expression
   37                | relation_and_expression OR relation_and_expression

   38 relation_and_expression: relation_expression
   39                        | relation_expression AND relation_expression

   40 relation_expression: NOT expressions comp expressions
   41                    | NOT TRUE
   42                    | NOT FALSE
   43                    | NOT L_PAREN bool_expression R_PAREN
   44                    | expressions comp expressions
   45                    | TRUE
   46                    | FALSE
   47                    | L_PAREN bool_expression R_PAREN
   48                    | L_PAREN error R_PAREN
   49                    | NOT L_PAREN error R_PAREN

   50 comp: EQ
   51     | NEQ
   52     | LT
   53     | GT
   54     | GTE
   55     | LTE
   56     | error

   57 var: IDENT
   58    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   59    | error L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   60    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61    | IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET
   62    | IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET error R_SQUARE_BRACKET

   64 vars: var
   65     | var COMMA vars
   66     | error COMMA vars
   67     | var COMMA error

   68 expression: multiplicative_expression
   69           | multiplicative_expression PLUS multiplicative_expression
   70           | multiplicative_expression MINUS multiplicative_expression
   71           | error PLUS multiplicative_expression
   72           | multiplicative_expression PLUS error
   73           | error PLUS error
   74           | multiplicative_expression MINUS error

   75 expressions: expression

   76 multiplicative_expression: term
   77                          | term MULT term
   78                          | term DIV term
   79                          | term PER term
   80                          | error MULT term
   81                          | term MULT error
   82                          | error DIV term
   83                          | term DIV error
   84                          | error PER term
   85                          | term PER error
   86                          | error MULT error
   87                          | error DIV error
   88                          | error PER error

   89 term: ident L_PAREN expressions R_PAREN
   90     | var
   91     | NUMBER
   92     | L_PAREN expressions R_PAREN
   93     | MINUS var
   94     | MINUS NUMBER
   95     | MINUS L_PAREN expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256) 8 9 10 14 15 16 21 22 23 31 33 48 49 56 59 61 62 63 66
    67 71 72 73 74 80 81 82 83 84 85 86 87 88
FUNCTION (258) 5
SEMICOLON (259) 5 7 8 10 19 20 21 22 29
COMMA (260) 18 65 66 67
COLON (261) 11 12 13 14 16
READ (262) 30 31
WRITE (263) 32 33
MULT (264) 77 80 81 86
DIV (265) 78 82 83 87
PLUS (266) 69 71 72 73
MINUS (267) 70 74 93 94 95
EQUAL (268)
PER (269) 79 84 85 88
END (270)
FOR (271) 29
CONTINUE (272) 34
L_SQUARE_BRACKET (273) 12 13 58 59 60 61 62 63
R_SQUARE_BRACKET (274) 12 13 58 59 60 61 62 63
L_PAREN (275) 43 47 48 49 89 92 95
R_PAREN (276) 43 47 48 49 89 92 95
BEGIN_PARAMS (277) 5
END_PARAMS (278) 5
BEGINLOOP (279) 27 28 29
ENDLOOP (280) 27 28 29
BEGIN_LOCALS (281) 5
END_LOCALS (282) 5
BEGIN_BODY (283) 5
END_BODY (284) 5
INTEGER (285) 11 12 13 14 15
ARRAY (286) 12 13
OF (287) 12 13
ENDIF (288) 25 26
ELSE (289) 26
IF (290) 25 26
THEN (291) 25 26
WHILE (292) 27 28
DO (293) 28
EQ (294) 50
NEQ (295) 51
LT (296) 52
GT (297) 53
GTE (298) 54
LTE (299) 55
AND (300) 39
OR (301) 37
NOT (302) 40 41 42 43 49
TRUE (303) 41 45
FALSE (304) 42 46
RETURN (305) 35
ASSIGN (306) 24 29
IDENT (307) 5 17 18 57 58 60 61 62 63
NUMBER (308) 12 13 29 91 94
ADD (309)
SUB (310)
MUlT (311)
UMINUS (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1 2, on right: 0 2
functions (60)
    on left: 3 4, on right: 2 4
function (61)
    on left: 5, on right: 4
declarations (62)
    on left: 6 7 8 9 10, on right: 5 7 8 9
declaration (63)
    on left: 11 12 13 14 15 16, on right: 7 9 10
ident (64)
    on left: 17 18, on right: 11 12 13 15 16 18 89
statements (65)
    on left: 19 20 21 22 23, on right: 5 20 22 23 25 26 27 28 29
statement (66)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35, on right: 19 20 21
    23
bool_expression (67)
    on left: 36 37, on right: 25 26 27 28 29 43 47
relation_and_expression (68)
    on left: 38 39, on right: 36 37
relation_expression (69)
    on left: 40 41 42 43 44 45 46 47 48 49, on right: 38 39
comp (70)
    on left: 50 51 52 53 54 55 56, on right: 40 44
var (71)
    on left: 57 58 59 60 61 62 63, on right: 24 64 65 67 90 93
vars (72)
    on left: 64 65 66 67, on right: 29 30 32 65 66
expression (73)
    on left: 68 69 70 71 72 73 74, on right: 58 59 60 62 63 75
expressions (74)
    on left: 75, on right: 24 29 35 40 44 89 92 95
multiplicative_expression (75)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87 88, on right: 68 69
    70 71 72 74
term (76)
    on left: 89 90 91 92 93 94 95, on right: 76 77 78 79 80 81 82 83
    84 85


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 3 (functions)]
    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 1 (program)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    5 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: functions . program

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 3 (functions)]
    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 1 (program)

    program    go to state 7
    functions  go to state 3
    function   go to state 4


State 4

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4


State 5

    5 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 program: functions program .

    $default  reduce using rule 2 (program)


State 8

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 9

    5 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    ident         go to state 15


State 11

    8 declarations: error . SEMICOLON declarations
   14 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 16
    COLON      shift, and go to state 17


State 12

   17 ident: IDENT .
   18      | IDENT . COMMA ident

    COMMA  shift, and go to state 18

    $default  reduce using rule 17 (ident)


State 13

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 19


State 14

    7 declarations: declaration . SEMICOLON declarations
    9             | declaration . error declarations
   10             | declaration . SEMICOLON error

    error      shift, and go to state 20
    SEMICOLON  shift, and go to state 21


State 15

   11 declaration: ident . COLON INTEGER
   12            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | ident . error INTEGER
   16            | ident . COLON error

    error  shift, and go to state 22
    COLON  shift, and go to state 23


State 16

    8 declarations: error SEMICOLON . declarations

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarations)
    END_LOCALS  reduce using rule 6 (declarations)

    declarations  go to state 24
    declaration   go to state 14
    ident         go to state 15


State 17

   14 declaration: error COLON . INTEGER

    INTEGER  shift, and go to state 25


State 18

   18 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 12

    ident  go to state 26


State 19

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 27


State 20

    9 declarations: declaration error . declarations

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarations)
    END_LOCALS  reduce using rule 6 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    ident         go to state 15


State 21

    7 declarations: declaration SEMICOLON . declarations
   10             | declaration SEMICOLON . error

    error  shift, and go to state 29
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarations)
    END_LOCALS  reduce using rule 6 (declarations)

    declarations  go to state 30
    declaration   go to state 14
    ident         go to state 15


State 22

   15 declaration: ident error . INTEGER

    INTEGER  shift, and go to state 31


State 23

   11 declaration: ident COLON . INTEGER
   12            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16            | ident COLON . error

    error    shift, and go to state 32
    INTEGER  shift, and go to state 33
    ARRAY    shift, and go to state 34


State 24

    8 declarations: error SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 25

   14 declaration: error COLON INTEGER .

    $default  reduce using rule 14 (declaration)


State 26

   18 ident: IDENT COMMA ident .

    $default  reduce using rule 18 (ident)


State 27

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_LOCALS  reduce using rule 6 (declarations)

    declarations  go to state 35
    declaration   go to state 14
    ident         go to state 15


State 28

    9 declarations: declaration error declarations .

    $default  reduce using rule 9 (declarations)


State 29

    8 declarations: error . SEMICOLON declarations
   10             | declaration SEMICOLON error .
   14 declaration: error . COLON INTEGER

    SEMICOLON  shift, and go to state 16
    COLON      shift, and go to state 17

    $default  reduce using rule 10 (declarations)


State 30

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 31

   15 declaration: ident error INTEGER .

    $default  reduce using rule 15 (declaration)


State 32

   16 declaration: ident COLON error .

    $default  reduce using rule 16 (declaration)


State 33

   11 declaration: ident COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 34

   12 declaration: ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 36


State 35

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 37


State 36

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   13            | ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 38


State 37

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 39


State 38

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   13            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 40


State 39

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 51
    statement   go to state 52
    var         go to state 53


State 40

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   13            | ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 54
    OF                shift, and go to state 55


State 41

   22 statements: error . SEMICOLON statements
   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SEMICOLON         shift, and go to state 56
    L_SQUARE_BRACKET  shift, and go to state 57


State 42

   30 statement: READ . vars
   31          | READ . error

    error  shift, and go to state 58
    IDENT  shift, and go to state 50

    var   go to state 59
    vars  go to state 60


State 43

   32 statement: WRITE . vars
   33          | WRITE . error

    error  shift, and go to state 61
    IDENT  shift, and go to state 50

    var   go to state 59
    vars  go to state 62


State 44

   29 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error  shift, and go to state 63
    IDENT  shift, and go to state 50

    var   go to state 59
    vars  go to state 64


State 45

   34 statement: CONTINUE .

    $default  reduce using rule 34 (statement)


State 46

   25 statement: IF . bool_expression THEN statements ENDIF
   26          | IF . bool_expression THEN statements ELSE statements ENDIF

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    bool_expression            go to state 74
    relation_and_expression    go to state 75
    relation_expression        go to state 76
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 79
    multiplicative_expression  go to state 80
    term                       go to state 81


State 47

   27 statement: WHILE . bool_expression BEGINLOOP statements ENDLOOP

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    bool_expression            go to state 82
    relation_and_expression    go to state 75
    relation_expression        go to state 76
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 79
    multiplicative_expression  go to state 80
    term                       go to state 81


State 48

   28 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expression

    BEGINLOOP  shift, and go to state 83


State 49

   35 statement: RETURN . expressions

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 85
    multiplicative_expression  go to state 80
    term                       go to state 81


State 50

   57 var: IDENT .
   58    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   60    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET
   62    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET error R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 86

    $default  reduce using rule 57 (var)


State 51

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 87


State 52

   19 statements: statement . SEMICOLON
   20           | statement . SEMICOLON statements
   21           | statement . SEMICOLON error
   23           | statement . error statements

    error      shift, and go to state 88
    SEMICOLON  shift, and go to state 89


State 53

   24 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 90


State 54

   13 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 91


State 55

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 92


State 56

   22 statements: error SEMICOLON . statements

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 93
    statement   go to state 52
    var         go to state 53


State 57

   59 var: error L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 94
    multiplicative_expression  go to state 80
    term                       go to state 81


State 58

   31 statement: READ error .
   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   66 vars: error . COMMA vars

    COMMA             shift, and go to state 95
    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 31 (statement)


State 59

   64 vars: var .
   65     | var . COMMA vars
   67     | var . COMMA error

    COMMA  shift, and go to state 96

    $default  reduce using rule 64 (vars)


State 60

   30 statement: READ vars .

    $default  reduce using rule 30 (statement)


State 61

   33 statement: WRITE error .
   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   66 vars: error . COMMA vars

    COMMA             shift, and go to state 95
    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 33 (statement)


State 62

   32 statement: WRITE vars .

    $default  reduce using rule 32 (statement)


State 63

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   66 vars: error . COMMA vars

    COMMA             shift, and go to state 95
    L_SQUARE_BRACKET  shift, and go to state 57


State 64

   29 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 97


State 65

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   71 expression: error . PLUS multiplicative_expression
   73           | error . PLUS error
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PLUS              shift, and go to state 100
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57


State 66

   93 term: MINUS . var
   94     | MINUS . NUMBER
   95     | MINUS . L_PAREN expressions R_PAREN

    error    shift, and go to state 102
    L_PAREN  shift, and go to state 103
    IDENT    shift, and go to state 50
    NUMBER   shift, and go to state 104

    var  go to state 105


State 67

   47 relation_expression: L_PAREN . bool_expression R_PAREN
   48                    | L_PAREN . error R_PAREN
   92 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 106
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    bool_expression            go to state 107
    relation_and_expression    go to state 75
    relation_expression        go to state 76
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 108
    multiplicative_expression  go to state 80
    term                       go to state 81


State 68

   40 relation_expression: NOT . expressions comp expressions
   41                    | NOT . TRUE
   42                    | NOT . FALSE
   43                    | NOT . L_PAREN bool_expression R_PAREN
   49                    | NOT . L_PAREN error R_PAREN

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 109
    TRUE     shift, and go to state 110
    FALSE    shift, and go to state 111
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 112
    multiplicative_expression  go to state 80
    term                       go to state 81


State 69

   45 relation_expression: TRUE .

    $default  reduce using rule 45 (relation_expression)


State 70

   46 relation_expression: FALSE .

    $default  reduce using rule 46 (relation_expression)


State 71

   17 ident: IDENT .
   18      | IDENT . COMMA ident
   57 var: IDENT .
   58    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   60    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET
   62    | IDENT . L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET error R_SQUARE_BRACKET

    COMMA             shift, and go to state 18
    L_SQUARE_BRACKET  shift, and go to state 86

    L_PAREN   reduce using rule 17 (ident)
    $default  reduce using rule 57 (var)


State 72

   91 term: NUMBER .

    $default  reduce using rule 91 (term)


State 73

   89 term: ident . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 113


State 74

   25 statement: IF bool_expression . THEN statements ENDIF
   26          | IF bool_expression . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 114


State 75

   36 bool_expression: relation_and_expression .
   37                | relation_and_expression . OR relation_and_expression

    OR  shift, and go to state 115

    $default  reduce using rule 36 (bool_expression)


State 76

   38 relation_and_expression: relation_expression .
   39                        | relation_expression . AND relation_expression

    AND  shift, and go to state 116

    $default  reduce using rule 38 (relation_and_expression)


State 77

   90 term: var .

    $default  reduce using rule 90 (term)


State 78

   75 expressions: expression .

    $default  reduce using rule 75 (expressions)


State 79

   44 relation_expression: expressions . comp expressions

    error  shift, and go to state 117
    EQ     shift, and go to state 118
    NEQ    shift, and go to state 119
    LT     shift, and go to state 120
    GT     shift, and go to state 121
    GTE    shift, and go to state 122
    LTE    shift, and go to state 123

    comp  go to state 124


State 80

   68 expression: multiplicative_expression .
   69           | multiplicative_expression . PLUS multiplicative_expression
   70           | multiplicative_expression . MINUS multiplicative_expression
   72           | multiplicative_expression . PLUS error
   74           | multiplicative_expression . MINUS error

    PLUS   shift, and go to state 125
    MINUS  shift, and go to state 126

    $default  reduce using rule 68 (expression)


State 81

   76 multiplicative_expression: term .
   77                          | term . MULT term
   78                          | term . DIV term
   79                          | term . PER term
   81                          | term . MULT error
   83                          | term . DIV error
   85                          | term . PER error

    MULT  shift, and go to state 127
    DIV   shift, and go to state 128
    PER   shift, and go to state 129

    $default  reduce using rule 76 (multiplicative_expression)


State 82

   27 statement: WHILE bool_expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 130


State 83

   28 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expression

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 131
    statement   go to state 52
    var         go to state 53


State 84

   92 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 132
    multiplicative_expression  go to state 80
    term                       go to state 81


State 85

   35 statement: RETURN expressions .

    $default  reduce using rule 35 (statement)


State 86

   58 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   60    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61    | IDENT L_SQUARE_BRACKET . error R_SQUARE_BRACKET
   62    | IDENT L_SQUARE_BRACKET . error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63    | IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET error R_SQUARE_BRACKET

    error    shift, and go to state 133
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 134
    multiplicative_expression  go to state 80
    term                       go to state 81


State 87

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 88

   23 statements: statement error . statements

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 135
    statement   go to state 52
    var         go to state 53


State 89

   19 statements: statement SEMICOLON .
   20           | statement SEMICOLON . statements
   21           | statement SEMICOLON . error

    error     shift, and go to state 136
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    ENDLOOP   reduce using rule 19 (statements)
    END_BODY  reduce using rule 19 (statements)
    ENDIF     reduce using rule 19 (statements)
    ELSE      reduce using rule 19 (statements)

    statements  go to state 137
    statement   go to state 52
    var         go to state 53


State 90

   24 statement: var ASSIGN . expressions

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 138
    multiplicative_expression  go to state 80
    term                       go to state 81


State 91

   13 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 139


State 92

   12 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 93

   22 statements: error SEMICOLON statements .

    $default  reduce using rule 22 (statements)


State 94

   59 var: error L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 140


State 95

   66 vars: error COMMA . vars

    error  shift, and go to state 63
    IDENT  shift, and go to state 50

    var   go to state 59
    vars  go to state 141


State 96

   65 vars: var COMMA . vars
   67     | var COMMA . error

    error  shift, and go to state 142
    IDENT  shift, and go to state 50

    var   go to state 59
    vars  go to state 143


State 97

   29 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 144


State 98

   80 multiplicative_expression: error MULT . term
   86                          | error MULT . error

    error    shift, and go to state 145
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident  go to state 73
    var    go to state 77
    term   go to state 146


State 99

   82 multiplicative_expression: error DIV . term
   87                          | error DIV . error

    error    shift, and go to state 147
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident  go to state 73
    var    go to state 77
    term   go to state 148


State 100

   71 expression: error PLUS . multiplicative_expression
   73           | error PLUS . error

    error    shift, and go to state 149
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    multiplicative_expression  go to state 150
    term                       go to state 81


State 101

   84 multiplicative_expression: error PER . term
   88                          | error PER . error

    error    shift, and go to state 151
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident  go to state 73
    var    go to state 77
    term   go to state 152


State 102

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 57


State 103

   95 term: MINUS L_PAREN . expressions R_PAREN

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 153
    multiplicative_expression  go to state 80
    term                       go to state 81


State 104

   94 term: MINUS NUMBER .

    $default  reduce using rule 94 (term)


State 105

   93 term: MINUS var .

    $default  reduce using rule 93 (term)


State 106

   48 relation_expression: L_PAREN error . R_PAREN
   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   71 expression: error . PLUS multiplicative_expression
   73           | error . PLUS error
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PLUS              shift, and go to state 100
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57
    R_PAREN           shift, and go to state 154


State 107

   47 relation_expression: L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 155


State 108

   44 relation_expression: expressions . comp expressions
   92 term: L_PAREN expressions . R_PAREN

    error    shift, and go to state 117
    R_PAREN  shift, and go to state 156
    EQ       shift, and go to state 118
    NEQ      shift, and go to state 119
    LT       shift, and go to state 120
    GT       shift, and go to state 121
    GTE      shift, and go to state 122
    LTE      shift, and go to state 123

    comp  go to state 124


State 109

   43 relation_expression: NOT L_PAREN . bool_expression R_PAREN
   49                    | NOT L_PAREN . error R_PAREN
   92 term: L_PAREN . expressions R_PAREN

    error    shift, and go to state 157
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    bool_expression            go to state 158
    relation_and_expression    go to state 75
    relation_expression        go to state 76
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 108
    multiplicative_expression  go to state 80
    term                       go to state 81


State 110

   41 relation_expression: NOT TRUE .

    $default  reduce using rule 41 (relation_expression)


State 111

   42 relation_expression: NOT FALSE .

    $default  reduce using rule 42 (relation_expression)


State 112

   40 relation_expression: NOT expressions . comp expressions

    error  shift, and go to state 117
    EQ     shift, and go to state 118
    NEQ    shift, and go to state 119
    LT     shift, and go to state 120
    GT     shift, and go to state 121
    GTE    shift, and go to state 122
    LTE    shift, and go to state 123

    comp  go to state 159


State 113

   89 term: ident L_PAREN . expressions R_PAREN

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 160
    multiplicative_expression  go to state 80
    term                       go to state 81


State 114

   25 statement: IF bool_expression THEN . statements ENDIF
   26          | IF bool_expression THEN . statements ELSE statements ENDIF

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 161
    statement   go to state 52
    var         go to state 53


State 115

   37 bool_expression: relation_and_expression OR . relation_and_expression

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    relation_and_expression    go to state 162
    relation_expression        go to state 76
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 79
    multiplicative_expression  go to state 80
    term                       go to state 81


State 116

   39 relation_and_expression: relation_expression AND . relation_expression

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    relation_expression        go to state 163
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 79
    multiplicative_expression  go to state 80
    term                       go to state 81


State 117

   56 comp: error .

    $default  reduce using rule 56 (comp)


State 118

   50 comp: EQ .

    $default  reduce using rule 50 (comp)


State 119

   51 comp: NEQ .

    $default  reduce using rule 51 (comp)


State 120

   52 comp: LT .

    $default  reduce using rule 52 (comp)


State 121

   53 comp: GT .

    $default  reduce using rule 53 (comp)


State 122

   54 comp: GTE .

    $default  reduce using rule 54 (comp)


State 123

   55 comp: LTE .

    $default  reduce using rule 55 (comp)


State 124

   44 relation_expression: expressions comp . expressions

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 164
    multiplicative_expression  go to state 80
    term                       go to state 81


State 125

   69 expression: multiplicative_expression PLUS . multiplicative_expression
   72           | multiplicative_expression PLUS . error

    error    shift, and go to state 165
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    multiplicative_expression  go to state 166
    term                       go to state 81


State 126

   70 expression: multiplicative_expression MINUS . multiplicative_expression
   74           | multiplicative_expression MINUS . error

    error    shift, and go to state 167
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    multiplicative_expression  go to state 168
    term                       go to state 81


State 127

   77 multiplicative_expression: term MULT . term
   81                          | term MULT . error

    error    shift, and go to state 169
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident  go to state 73
    var    go to state 77
    term   go to state 170


State 128

   78 multiplicative_expression: term DIV . term
   83                          | term DIV . error

    error    shift, and go to state 171
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident  go to state 73
    var    go to state 77
    term   go to state 172


State 129

   79 multiplicative_expression: term PER . term
   85                          | term PER . error

    error    shift, and go to state 173
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident  go to state 73
    var    go to state 77
    term   go to state 174


State 130

   27 statement: WHILE bool_expression BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 175
    statement   go to state 52
    var         go to state 53


State 131

   28 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expression

    ENDLOOP  shift, and go to state 176


State 132

   92 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 156


State 133

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   61    | IDENT L_SQUARE_BRACKET error . R_SQUARE_BRACKET
   62    | IDENT L_SQUARE_BRACKET error . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   71 expression: error . PLUS multiplicative_expression
   73           | error . PLUS error
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PLUS              shift, and go to state 100
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57
    R_SQUARE_BRACKET  shift, and go to state 177


State 134

   58 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   60    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63    | IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET error R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 178


State 135

   23 statements: statement error statements .

    $default  reduce using rule 23 (statements)


State 136

   21 statements: statement SEMICOLON error .
   22           | error . SEMICOLON statements
   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    SEMICOLON         shift, and go to state 56
    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 21 (statements)


State 137

   20 statements: statement SEMICOLON statements .

    $default  reduce using rule 20 (statements)


State 138

   24 statement: var ASSIGN expressions .

    $default  reduce using rule 24 (statement)


State 139

   13 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 179


State 140

   59 var: error L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 59 (var)


State 141

   66 vars: error COMMA vars .

    $default  reduce using rule 66 (vars)


State 142

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   66 vars: error . COMMA vars
   67     | var COMMA error .

    COMMA             shift, and go to state 95
    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 67 (vars)


State 143

   65 vars: var COMMA vars .

    $default  reduce using rule 65 (vars)


State 144

   29 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 180


State 145

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   86 multiplicative_expression: error MULT error .

    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 86 (multiplicative_expression)


State 146

   80 multiplicative_expression: error MULT term .

    $default  reduce using rule 80 (multiplicative_expression)


State 147

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   87 multiplicative_expression: error DIV error .

    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 87 (multiplicative_expression)


State 148

   82 multiplicative_expression: error DIV term .

    $default  reduce using rule 82 (multiplicative_expression)


State 149

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   73 expression: error PLUS error .
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 73 (expression)


State 150

   71 expression: error PLUS multiplicative_expression .

    $default  reduce using rule 71 (expression)


State 151

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   88 multiplicative_expression: error PER error .

    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 88 (multiplicative_expression)


State 152

   84 multiplicative_expression: error PER term .

    $default  reduce using rule 84 (multiplicative_expression)


State 153

   95 term: MINUS L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 181


State 154

   48 relation_expression: L_PAREN error R_PAREN .

    $default  reduce using rule 48 (relation_expression)


State 155

   47 relation_expression: L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 47 (relation_expression)


State 156

   92 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 92 (term)


State 157

   49 relation_expression: NOT L_PAREN error . R_PAREN
   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   71 expression: error . PLUS multiplicative_expression
   73           | error . PLUS error
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PLUS              shift, and go to state 100
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57
    R_PAREN           shift, and go to state 182


State 158

   43 relation_expression: NOT L_PAREN bool_expression . R_PAREN

    R_PAREN  shift, and go to state 183


State 159

   40 relation_expression: NOT expressions comp . expressions

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 184
    multiplicative_expression  go to state 80
    term                       go to state 81


State 160

   89 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 185


State 161

   25 statement: IF bool_expression THEN statements . ENDIF
   26          | IF bool_expression THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 186
    ELSE   shift, and go to state 187


State 162

   37 bool_expression: relation_and_expression OR relation_and_expression .

    $default  reduce using rule 37 (bool_expression)


State 163

   39 relation_and_expression: relation_expression AND relation_expression .

    $default  reduce using rule 39 (relation_and_expression)


State 164

   44 relation_expression: expressions comp expressions .

    $default  reduce using rule 44 (relation_expression)


State 165

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   72 expression: multiplicative_expression PLUS error .
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 72 (expression)


State 166

   69 expression: multiplicative_expression PLUS multiplicative_expression .

    $default  reduce using rule 69 (expression)


State 167

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   74 expression: multiplicative_expression MINUS error .
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 74 (expression)


State 168

   70 expression: multiplicative_expression MINUS multiplicative_expression .

    $default  reduce using rule 70 (expression)


State 169

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   81 multiplicative_expression: term MULT error .

    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 81 (multiplicative_expression)


State 170

   77 multiplicative_expression: term MULT term .

    $default  reduce using rule 77 (multiplicative_expression)


State 171

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   83 multiplicative_expression: term DIV error .

    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 83 (multiplicative_expression)


State 172

   78 multiplicative_expression: term DIV term .

    $default  reduce using rule 78 (multiplicative_expression)


State 173

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   85 multiplicative_expression: term PER error .

    L_SQUARE_BRACKET  shift, and go to state 57

    $default  reduce using rule 85 (multiplicative_expression)


State 174

   79 multiplicative_expression: term PER term .

    $default  reduce using rule 79 (multiplicative_expression)


State 175

   27 statement: WHILE bool_expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 188


State 176

   28 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expression

    WHILE  shift, and go to state 189


State 177

   61 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET .
   62    | IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 190

    $default  reduce using rule 61 (var)


State 178

   58 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   60    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET error R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 191

    $default  reduce using rule 58 (var)


State 179

   13 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 192


State 180

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    bool_expression            go to state 193
    relation_and_expression    go to state 75
    relation_expression        go to state 76
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 79
    multiplicative_expression  go to state 80
    term                       go to state 81


State 181

   95 term: MINUS L_PAREN expressions R_PAREN .

    $default  reduce using rule 95 (term)


State 182

   49 relation_expression: NOT L_PAREN error R_PAREN .

    $default  reduce using rule 49 (relation_expression)


State 183

   43 relation_expression: NOT L_PAREN bool_expression R_PAREN .

    $default  reduce using rule 43 (relation_expression)


State 184

   40 relation_expression: NOT expressions comp expressions .

    $default  reduce using rule 40 (relation_expression)


State 185

   89 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 89 (term)


State 186

   25 statement: IF bool_expression THEN statements ENDIF .

    $default  reduce using rule 25 (statement)


State 187

   26 statement: IF bool_expression THEN statements ELSE . statements ENDIF

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 194
    statement   go to state 52
    var         go to state 53


State 188

   27 statement: WHILE bool_expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 27 (statement)


State 189

   28 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expression

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NOT      shift, and go to state 68
    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    bool_expression            go to state 195
    relation_and_expression    go to state 75
    relation_expression        go to state 76
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 79
    multiplicative_expression  go to state 80
    term                       go to state 81


State 190

   62 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 196
    multiplicative_expression  go to state 80
    term                       go to state 81


State 191

   60 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   63    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . error R_SQUARE_BRACKET

    error    shift, and go to state 197
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 198
    multiplicative_expression  go to state 80
    term                       go to state 81


State 192

   13 declaration: ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (declaration)


State 193

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 199


State 194

   26 statement: IF bool_expression THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 200


State 195

   28 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expression .

    $default  reduce using rule 28 (statement)


State 196

   62 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 201


State 197

   59 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   63    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET error . R_SQUARE_BRACKET
   71 expression: error . PLUS multiplicative_expression
   73           | error . PLUS error
   80 multiplicative_expression: error . MULT term
   82                          | error . DIV term
   84                          | error . PER term
   86                          | error . MULT error
   87                          | error . DIV error
   88                          | error . PER error

    MULT              shift, and go to state 98
    DIV               shift, and go to state 99
    PLUS              shift, and go to state 100
    PER               shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 57
    R_SQUARE_BRACKET  shift, and go to state 202


State 198

   60 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 203


State 199

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    error  shift, and go to state 63
    IDENT  shift, and go to state 50

    var   go to state 59
    vars  go to state 204


State 200

   26 statement: IF bool_expression THEN statements ELSE statements ENDIF .

    $default  reduce using rule 26 (statement)


State 201

   62 var: IDENT L_SQUARE_BRACKET error R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


State 202

   63 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET error R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 203

   60 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (var)


State 204

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 205


State 205

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    error    shift, and go to state 65
    MINUS    shift, and go to state 66
    L_PAREN  shift, and go to state 84
    IDENT    shift, and go to state 71
    NUMBER   shift, and go to state 72

    ident                      go to state 73
    var                        go to state 77
    expression                 go to state 78
    expressions                go to state 206
    multiplicative_expression  go to state 80
    term                       go to state 81


State 206

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 207


State 207

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    RETURN    shift, and go to state 49
    IDENT     shift, and go to state 50

    statements  go to state 208
    statement   go to state 52
    var         go to state 53


State 208

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 209


State 209

   29 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expression SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 29 (statement)
